{"version":3,"sources":["constants.js","algo/pathFinder.js","Provider.jsx","algo/dijkstra.js","algo/bellmanFord.js","algo/AStar.js","algo/dfs.js","algo/bfs.js","algo/index.js","components/Header/Header.js","components/Board/Board.js","components/Info/Info.js","components/Container/Container.js","App.js","index.js"],"names":["BOARD_ROW","BOARD_COL","VISIT_COLOR","SHORT_COLOR","FIXED_COLOR","INITIAL_COLOR","CLICK_COLOR","DIJKSTRA","BELLMAN_FORD","A_STAR","DFS","KEYS","i","j","uuidv4","BOARD","color","visit","PathFinder","begin","end","board","setState","delay","clear","newBoard","copy","_copyBoard","_init","target","JSON","parse","stringify","updateBoard","timeFactor","temp","timer","setTimeout","_setState","_delay","timers","push","dist","Array","prev","Infinity","x","y","paintShortestPath","path","tempX","tempY","length","this","forEach","clearTimeout","row","col","Context","createContext","_begin","_end","_board","Provider","props","useState","setBegin","setEnd","setBoard","isPathExist","setIsPathExist","pathFinder","useRef","value","current","children","Dijkstra","args","execute","pq","queue","d","find","peek","dequeue","currentX","currentY","currentD","isUpdated","nextX","nextY","PriorityQueue","comparator","a","b","BellmanFord","_relax","k","relaxedResult","AStar","_h","start","Math","abs","opened","fBegin","f","g","nextF","fill","Dfs","_dfs","visited","Bfs","q","updateItem","enqueue","isEmpty","clearTimers","Queue","Pathfinder","Header","type","setType","pause","setPause","setDelay","context","useContext","isVisualized","useEffect","className","onChange","e","disabled","defaultChecked","defaultValue","onClick","_e","Board","name","ref","clicking","setClicking","changeColor","style","backgroundColor","data","dataset","ridx","cidx","onMouseDown","onMouseUp","onMouseMove","map","display","justifyContent","transition","ModalInfo","isHelped","onHelpClose","isOpen","contentLabel","onRequestClose","Modal","setAppElement","Container","setIsHelped","setIsOpen","onClose","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e363a40.chunk.js","sourcesContent":["import uuidv4 from 'uuid/v4';\r\n\r\nexport const BOARD_ROW = 16;\r\nexport const BOARD_COL = 30;\r\nexport const VISIT_COLOR = 'skyblue';\r\nexport const SHORT_COLOR = 'tomato';\r\nexport const FIXED_COLOR = 'black';\r\nexport const INITIAL_COLOR = 'wheat';\r\nexport const CLICK_COLOR = 'gray';\r\n\r\n\r\nexport const DIJKSTRA = 'dijkstra';\r\nexport const BELLMAN_FORD = 'bellman_ford';\r\nexport const A_STAR = 'a-star';\r\nexport const DFS = 'DFS';\r\nexport const BFS = 'BFS';\r\n\r\n// uuid\r\nexport const KEYS = [];\r\nfor (let i = 0; i < BOARD_ROW; i++) {\r\n  KEYS[i] = [];\r\n  for (let j = 0; j < BOARD_COL; j++) {\r\n    KEYS[i][j] = uuidv4();\r\n  }\r\n}\r\n\r\n// Item state\r\nexport const ITEM_FIXED = 'ITEM_FIXED';\r\nexport const ITEM_INITIAL = 'ITEM_INITIAL';\r\nexport const ITEM_VISITED = 'ITEM_VISITED';\r\nexport const ITEM_CLICKED = 'ITEM_CLICKED';\r\nexport const ITEM_SHORTEST = 'ITEM_SHORTEST';\r\n\r\n// Delay\r\nexport const DELAY_SLOWEST = 550;\r\nexport const DELAY_SLOW = 450;\r\nexport const DELAY_NORMAL = 300;\r\nexport const DELAY_FAST = 150;\r\nexport const DELAY_FASTEST = 50;\r\n\r\n// Board\r\nexport const BOARD = [];\r\nfor(let i=0; i<BOARD_ROW; i++){\r\n  BOARD[i] = [];\r\n  for(let j=0; j<BOARD_COL; j++){\r\n    BOARD[i][j] = {\r\n      color: INITIAL_COLOR,\r\n      visit: false\r\n    };\r\n  }\r\n}","// @flow\r\n\r\nimport { BOARD_ROW, BOARD_COL, SHORT_COLOR } from 'constants.js';\r\n\r\ntype BoardType = Array<Array<{| color: string, visit: boolean |}>>;\r\n\r\nexport type ConstructorType = {\r\n  begin: {| x: number, y: number |},\r\n  end: {| x: number, y: number |},\r\n  board: BoardType,\r\n  setState: (board : BoardType) => void,\r\n  delay: number\r\n};\r\n\r\nexport default class PathFinder {\r\n\r\n  begin: {| x: number, y: number |};\r\n  end: {| x: number, y: number |};\r\n  copy: BoardType;\r\n  _setState: (board : BoardType) => void;\r\n  _delay: number;\r\n  dist: Array<Array<number>>;\r\n  prev: Array<Array<{| x: number, y: number |}>>;\r\n  row : Array<number>;\r\n  col : Array<number>;\r\n  timers : Array<number>;\r\n\r\n  constructor({ begin, end, board, setState, delay } : ConstructorType){\r\n    this.begin = begin;\r\n    this.end = end;\r\n    this.copy = this._copyBoard(board);\r\n    this._init();\r\n    this._setState = setState;\r\n    this._delay = delay;\r\n  }\r\n\r\n  static row = [-1,1,0,0];\r\n  static col = [0,0,-1,1];\r\n  static timers = [];\r\n\r\n  clear = (newBoard : BoardType) => {\r\n    this.copy = this._copyBoard(newBoard);\r\n    this._init();\r\n  }\r\n\r\n  _copyBoard = (target : BoardType) : BoardType => {\r\n    return JSON.parse(JSON.stringify(target));\r\n  }\r\n\r\n  updateBoard = (timeFactor : number) => {\r\n    const temp = this._copyBoard(this.copy);\r\n    const timer = setTimeout(() => { this._setState(temp); }, timeFactor*this._delay);\r\n    PathFinder.timers.push(timer);\r\n  }\r\n\r\n  _init = () => {\r\n    this.dist = new Array(BOARD_ROW);\r\n    this.prev = new Array(BOARD_ROW);\r\n    for(let i=0; i<BOARD_ROW; i++) {\r\n      this.dist[i] = [];\r\n      this.prev[i] = [];\r\n      for(let j=0; j<BOARD_COL; j++) {\r\n        this.dist[i][j] = Infinity;\r\n        this.prev[i][j] = { x: -1, y: -1 };\r\n      }\r\n    }\r\n    this.dist[this.begin.x][this.begin.y] = 0;\r\n  }\r\n\r\n  clearTimers() {\r\n    PathFinder.timers.forEach((timer : TimeoutID) => { clearTimeout(timer); });\r\n    PathFinder.timers = [];\r\n  }\r\n\r\n  paintShortestPath = () => {\r\n    const { copy, begin, end, prev, updateBoard } = this;\r\n\r\n    copy[end.x][end.y].visit = false;\r\n\r\n    const path : Array<{| x: number, y: number |}> = [];\r\n    let x : number = end.x;\r\n    let y : number = end.y;\r\n\r\n    while(prev[x][y].x !== -1 && prev[x][y].y !== -1) {\r\n      path.push({ x, y });\r\n      const tempX = x, tempY = y;\r\n      x = prev[tempX][tempY].x;\r\n      y = prev[tempX][tempY].y;\r\n    }\r\n    path.push({ x: begin.x, y: begin.y });\r\n\r\n    for(let i=path.length-2; i>0; i--) {\r\n      x = path[i].x;\r\n      y = path[i].y;\r\n      copy[x][y].color = SHORT_COLOR;\r\n      updateBoard(path.length-i);\r\n    }\r\n  }\r\n}","// @flow\r\n\r\nimport React, { createContext, useState, useRef, type Node } from 'react';\r\nimport { BOARD_ROW, BOARD_COL, ITEM_CLICKED, FIXED_COLOR, INITIAL_COLOR } from './constants';\r\nimport PathFinder from 'algo/pathFinder';\r\nimport Timer from 'algo/Timer';\r\n\r\ntype PositionType = {|x: number, y: number|};\r\ntype BoardType = Array<Array<{|color: string, visit: boolean|}>>;\r\n\r\nexport type ContextType = {|\r\n  isVisualized: boolean,\r\n\r\n  begin: PositionType,\r\n  end: PositionType,\r\n  setBegin: (PositionType) => void,\r\n  setEnd: (PositionType) => void,\r\n  board: BoardType,\r\n  setBoard: (BoardType) => void,\r\n  isPathExist: boolean,\r\n  setIsPathExist: (boolean) => void,\r\n  clear: (void) => void,\r\n  clearPath: void => void,\r\n  pathFinder: any,\r\n|};\r\n\r\nconst Context = createContext<ContextType>();\r\nconst _begin = { x: 7, y: 4 };\r\nconst _end = { x: 7, y: 25 };\r\nconst _board : BoardType = new Array(BOARD_ROW);\r\nfor(let i=0; i<BOARD_ROW; i++){\r\n  _board[i] = [];\r\n  for(let j=0; j<BOARD_COL; j++){\r\n    _board[i][j] = {\r\n      color: INITIAL_COLOR,\r\n      visit: false\r\n    };\r\n  }\r\n}\r\n_board[_begin.x][_begin.y] = { color: FIXED_COLOR, visit: true };\r\n_board[_end.x][_end.y] = { color: FIXED_COLOR, visit: false };\r\n\r\nconst Provider = (props : {| children: Node |}) => {\r\n\r\n  const [begin, setBegin] = useState<PositionType>(_begin);\r\n  const [end, setEnd] = useState<PositionType>(_end);\r\n  const [board, setBoard] = useState<BoardType>(_board);\r\n  const [isPathExist, setIsPathExist] = useState<boolean>(true);\r\n  const [isVisualized, setIsVisualized] = useState<boolean>(false);\r\n  const pathFinder = useRef<any>(null);\r\n\r\n  const clear = () => {\r\n    setBoard(_board);\r\n    if (isPathExist === false) {\r\n      setIsPathExist(true);\r\n    }\r\n    if (pathFinder.current instanceof PathFinder) {\r\n      pathFinder.current.clear(_board);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <Context.Provider value={{\r\n      begin, setBegin,\r\n      end, setEnd,\r\n      board, setBoard,\r\n      pathFinder,clear,\r\n      isPathExist, setIsPathExist\r\n    }}\r\n    >\r\n      {props.children}\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport { Context, Provider };","// @flow\n\nimport PriorityQueue from 'js-priority-queue';\nimport {\n  BOARD_ROW,\n  BOARD_COL,\n  VISIT_COLOR,\n  CLICK_COLOR,\n} from 'constants.js';\nimport PathFinder, { type ConstructorType } from './pathFinder';\n\nexport default class Dijkstra extends PathFinder {\n\n  constructor(args : ConstructorType){\n    super(args);\n    this.pq = new PriorityQueue<Object>({ comparator: (a, b) => a.d - b.d });\n  }\n\n  execute = () : boolean => {\n    const { pq, dist, prev, copy, begin, end } = this;\n\n    pq.queue({ x: begin.x, y: begin.y, d: 0 });\n    let find = false;\n\n    while(pq.length) {\n      const current : {| x: number, y: number, d: number |} = pq.peek();\n      pq.dequeue();\n      const currentX : number = current.x;\n      const currentY : number = current.y;\n      const currentD : number = current.d;\n      \n      let isUpdated = false;\n      for(let i=0; i<PathFinder.row.length; i++) {\n        const nextX = currentX + PathFinder.row[i];\n        const nextY = currentY + PathFinder.col[i];\n      \n        if (nextX < 0 || nextX >= BOARD_ROW || nextY < 0 || nextY >= BOARD_COL) continue;\n        if (dist[currentX][currentY] === Infinity || dist[currentX][currentY] + 1 >= dist[nextX][nextY]) continue;\n        if (copy[nextX][nextY].color === CLICK_COLOR) continue;\n\n        if (nextX === end.x && nextY === end.y) {\n          copy[nextX][nextY].visit = true;\n          prev[nextX][nextY] = { x: currentX, y: currentY };\n          isUpdated = true;\n          find = true;\n          break;\n        }\n\n        isUpdated = true;\n        copy[nextX][nextY] = { color: VISIT_COLOR, visit: true };\n        dist[nextX][nextY] = dist[currentX][currentY] + 1;\n        prev[nextX][nextY] = { x: currentX, y: currentY };\n\n        pq.queue({ x: nextX, y: nextY, d: dist[nextX][nextY] });\n      }\n      \n      if (isUpdated) {\n        this.updateBoard(currentD);\n        if (find) {\n          pq.clear(0);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}","// @flow\n\nimport {\n  BOARD_ROW,\n  BOARD_COL,\n  VISIT_COLOR,\n  CLICK_COLOR,\n} from 'constants.js';\nimport PathFinder from './pathFinder';\n\nexport default class BellmanFord extends PathFinder {\n\n  _relax = (timeFactor : number) : {| timeFactor: number, find: boolean|} => {\n    const { copy, dist, prev, end } = this;\n    let find = false;\n    for(let i=0; i<BOARD_ROW; i++){\n      for(let j=0; j<BOARD_COL; j++){\n\n        let isUpdated = false;\n        for(let k=0; k<PathFinder.row.length; k++){\n          const nextX = i + PathFinder.row[k];\n          const nextY = j + PathFinder.col[k];\n\n          if (nextX < 0 || nextX >= BOARD_ROW || nextY < 0 || nextY >= BOARD_COL) continue;\n          if (dist[i][j] === Infinity || dist[i][j] + 1 >= dist[nextX][nextY]) continue;\n          if (copy[nextX][nextY].color === CLICK_COLOR) continue;\n\n          dist[nextX][nextY] = dist[i][j] + 1;\n          if (!(nextX === end.x && nextY === end.y)) {\n            copy[nextX][nextY].color = VISIT_COLOR;\n            copy[nextX][nextY].visit = true;\n          } else {\n            find = true;\n          }\n          prev[nextX][nextY] = { x: i, y: j };\n          isUpdated = true;\n        }\n        if (isUpdated) {\n          this.updateBoard(timeFactor);\n          timeFactor++;\n        }\n      }\n    }\n    return { timeFactor, find };\n  }\n\n  execute = () : boolean => {\n    const { copy, _relax } = this;\n    let timeFactor = 1, find = false;\n    for(let i=1; i<=copy.length-1; i++) {\n      const relaxedResult = _relax(timeFactor);\n      timeFactor = relaxedResult.timeFactor;\n      timeFactor++;\n      if (relaxedResult.find) find = true;\n    }\n    copy[this.end.x][this.end.y].visit = true;\n    this.updateBoard(timeFactor);\n    return find;\n  }\n}","// @flow\n\nimport PriorityQueue from 'js-priority-queue';\nimport {\n  BOARD_ROW,\n  BOARD_COL,\n  VISIT_COLOR,\n  CLICK_COLOR,\n} from 'constants.js';\nimport PathFinder, { type ConstructorType } from './pathFinder';\n\nexport default class AStar extends PathFinder {\n  opened: Array<Array<boolean>>;\n\n  constructor({begin, end, board, setState, delay} : ConstructorType){\n    super({ begin, end, board, setState, delay });\n    this.opened = new Array(BOARD_ROW);\n    for (let i=0; i<BOARD_ROW; i++) {\n      this.opened[i] = new Array(BOARD_COL).fill(false);\n    }\n    this.pq = new PriorityQueue<Object>({ comparator: (a,b) => a.f - b.f });\n  }\n\n  _h = (start : {| x: number, y: number |}) : number => {\n    return Math.abs(start.x - this.end.x) + Math.abs(start.y - this.end.y);\n  }\n\n  execute = () : boolean => {\n    const { \n      dist, pq, opened, copy,\n      prev, begin, _h, end\n    } = this;\n    let timeFactor = 1;\n\n    const fBegin = _h(begin);\n    pq.queue({ x: begin.x, y: begin.y, f: fBegin })\n    dist[begin.x][begin.y] = 0;\n    opened[begin.x][begin.y] = true;\n\n    while(pq.length) {\n      const current : {| x: number, y: number, f: number |} = pq.peek();\n      const currentX = current.x;\n      const currentY = current.y;\n\n      opened[currentX][currentY] = false;\n      pq.dequeue();\n\n      let find = false;\n      for(let i=0; i<PathFinder.row.length; i++) {\n        const nextX : number = currentX + PathFinder.row[i];\n        const nextY : number = currentY + PathFinder.col[i];\n\n        if (nextX < 0 || nextX >= BOARD_ROW || nextY < 0 || nextY >= BOARD_COL) continue;\n        if (copy[nextX][nextY].color === CLICK_COLOR) continue;\n\n        const g = dist[currentX][currentY] + 1;\n        const nextF = g + _h({x : nextX, y: nextY});\n\n        if (g < dist[nextX][nextY]) {\n          prev[nextX][nextY] = { x: currentX, y: currentY };\n          dist[nextX][nextY] = g;\n\n          if (!(nextX === end.x && nextY === end.y)) {\n            copy[nextX][nextY].color = VISIT_COLOR;\n          } else {\n            find = true;\n          }\n          copy[nextX][nextY].visit = true;\n          this.updateBoard(timeFactor);\n          timeFactor++;\n\n          if (find) break;\n\n          if (opened[nextX][nextY] === false) {\n            pq.queue({x: nextX, y: nextY, f: nextF});\n            opened[nextX][nextY] = true;\n          }\n        }\n      }\n\n      if (find) {\n        pq.clear();\n        return true;\n      }\n    }\n    return false;\n  }\n}","// @flow\r\n\r\nimport {\r\n    BOARD_ROW,\r\n    BOARD_COL,\r\n    VISIT_COLOR,\r\n    CLICK_COLOR,\r\n  } from 'constants.js';\r\n  import PathFinder, { type ConstructorType } from './pathFinder';\r\n  \r\n  export default class Dfs extends PathFinder {\r\n    find: boolean;\r\n    visited: Array<Array<boolean>>;\r\n  \r\n    constructor(args : ConstructorType) {\r\n      super(args);\r\n      this.find = false;\r\n      this.visited = [];\r\n      for (let i=0; i<BOARD_ROW; i++) {\r\n        this.visited[i] = Array(BOARD_COL).fill(false);\r\n      }\r\n    }\r\n  \r\n    _dfs = (x : number, y : number, timeFactor : number) => {\r\n      const { prev, end, visited, copy, updateBoard, _dfs } = this;\r\n      visited[x][y] = true;\r\n  \r\n      for (let i=0; i<PathFinder.row.length; i++) {\r\n        const nextX = x + PathFinder.row[i];\r\n        const nextY = y + PathFinder.col[i];\r\n  \r\n        if (nextX < 0 || nextX >= BOARD_ROW || nextY < 0 || nextY >= BOARD_COL) continue;\r\n        if (visited[nextX][nextY] || copy[nextX][nextY].color === CLICK_COLOR) continue;\r\n  \r\n        if (!(nextX === end.x && nextY === end.y)) {\r\n          copy[nextX][nextY].color = VISIT_COLOR;\r\n        } else {\r\n          this.find = true;\r\n        }\r\n        prev[nextX][nextY] = { x, y };\r\n        copy[nextX][nextY].visit = true;\r\n        updateBoard(timeFactor);\r\n        if (this.find) return;\r\n        _dfs(nextX, nextY, timeFactor);\r\n        if (this.find) return;\r\n      }\r\n    }\r\n  \r\n    execute = () : boolean => {\r\n      this._dfs(this.begin.x, this.begin.y, 1);\r\n      return this.find;\r\n    }\r\n  } ","// @flow\r\n\r\nimport Queue from 'queue-fifo';\r\nimport {\r\n  BOARD_ROW,\r\n  BOARD_COL,\r\n  ITEM_CLICKED,\r\n  ITEM_VISITED\r\n} from 'constants.js';\r\nimport PathFinder, { type ConstructorType } from './pathFinder';\r\n\r\nexport default class Bfs extends PathFinder {\r\n  visited: Array<Array<boolean>>;\r\n  queue: any;\r\n\r\n  constructor(args : ConstructorType) {\r\n    super(args);\r\n    this.visited = [];\r\n    this.q = new Queue();\r\n    for (let i=0; i<BOARD_ROW; i++) {\r\n      this.visited[i] = Array(BOARD_COL).fill(false);\r\n    }\r\n  }\r\n\r\n  execute = () : boolean => {\r\n\r\n    const { q, begin, end, visited, board, prev, updateItem } = this;\r\n    q.enqueue({ x: begin.x, y: begin.y });\r\n    visited[begin.x][begin.y] = true;\r\n    let find = false, timeFactor = 1;\r\n\r\n    while(!q.isEmpty()) {\r\n      const current = q.peek();\r\n      q.dequeue();\r\n\r\n      if (current.x === end.x && current.y === end.y) {\r\n        break;\r\n      }\r\n\r\n      for (let i=0; i<PathFinder.row.length; i++) {\r\n        const nextX = current.x + PathFinder.row[i];\r\n        const nextY = current.y + PathFinder.col[i];\r\n\r\n        if (nextX < 0 || nextX >= BOARD_ROW || nextY < 0 || nextY >= BOARD_COL) continue;\r\n        if (visited[nextX][nextY] || board[nextX][nextY] === ITEM_CLICKED) continue;\r\n\r\n        visited[nextX][nextY] = true;\r\n        prev[nextX][nextY] = { x: current.x, y: current.y };\r\n        updateItem(nextX, nextY, ITEM_VISITED, timeFactor);\r\n        timeFactor++;\r\n        q.enqueue({ x: nextX, y: nextY });\r\n\r\n        if (nextX === end.x && nextY === end.y) {\r\n          find = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!find) this.clearTimers();\r\n    return find;\r\n  }\r\n}\r\n","// @flow\n\nimport { DIJKSTRA, BELLMAN_FORD, A_STAR, DFS, BFS } from 'constants.js';\nimport Dijkstra from './dijkstra';\nimport BellmanFord from './bellmanFord';\nimport AStar from './AStar';\nimport Dfs from './dfs';\nimport Bfs from './bfs';\n\ntype PathfinderType \n  = { [key: string] : (\n    typeof Dijkstra \n    | typeof BellmanFord \n    | typeof AStar\n    | typeof Dfs) };\n\nconst Pathfinder : PathfinderType = {\n  [DIJKSTRA]: Dijkstra,\n  [BELLMAN_FORD]: BellmanFord,\n  [A_STAR]: AStar,\n  [DFS]: Dfs,\n  [BFS]: Bfs,\n};\n\nexport default Pathfinder;\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { DIJKSTRA, BELLMAN_FORD, SHORT_COLOR, A_STAR, DFS, BFS } from 'constants.js';\r\nimport { Context } from 'Provider';\r\nimport PathFinder from 'algo/index.js';\r\nimport { FaPause, FaPlay } from 'react-icons/fa';\r\nimport './Header.scss';\r\n\r\nconst Header = () => {\r\n  const [type, setType] = useState(DIJKSTRA);\r\n  const [pause, setPause] = useState(false);\r\n  const [delay, setDelay] = useState(300);\r\n  const context = useContext(Context);\r\n  const { begin, end, board, setBoard, pathFinder, clear, isVisualized } = context;\r\n\r\n  const onSelectChange = (e) => {\r\n    setType(e.target.value);\r\n  };\r\n\r\n  const onDelayChange = (e) => {\r\n    setDelay(e.target.value);\r\n  };\r\n\r\n\r\n  const onVisualize = (_e) => {\r\n    pathFinder.current = new PathFinder[type]({\r\n      begin,\r\n      end,\r\n      board,\r\n      setState: setBoard,\r\n      delay\r\n    });\r\n    pathFinder.current.execute();\r\n  };\r\n\r\n  const onClear = () => {\r\n    clear();\r\n    if (isVisualized && !pause) return;\r\n    if (pause) setPause(false);\r\n  };\r\n\r\n  const onPause = () => {\r\n    if (pause) {\r\n      setPause(false);\r\n      pathFinder.current.resumeTimers();\r\n    } else {\r\n      setPause(true);\r\n      pathFinder.current.stopTimers();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (board[end.x][end.y].visit) {\r\n      pathFinder.current.paintShortestPath();\r\n    }\r\n  }, [board, pathFinder, end]);\r\n\r\n  useEffect(() => {\r\n    if (board[end.x][end.y].color === SHORT_COLOR) {\r\n      pathFinder.current.clearTimers();\r\n    }\r\n  }, [board, pathFinder, end]);\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <select className=\"header_select\" onChange={onSelectChange} disabled={isVisualized}>\r\n        <option value={DIJKSTRA} defaultChecked={true}>Dijkstra</option>\r\n        <option value={BELLMAN_FORD}>Bellman-Ford</option>\r\n        <option value={A_STAR}>A Star</option>\r\n        <option value={DFS}>DFS</option>\r\n        <option value={DFS}>BFS</option>\r\n      </select>\r\n      <select className=\"header_select\" onChange={onDelayChange} defaultValue={300} disabled={isVisualized}>\r\n        <option value={550}>slowest</option>\r\n        <option value={450}>slow</option>\r\n        <option value={300}>default</option>\r\n        <option value={150}>fast</option>\r\n        <option value={50}>fastest</option>\r\n      </select>\r\n      <button className=\"header_button\" onClick={onVisualize}>\r\n        Visualize this\r\n      </button>\r\n      <button className=\"header_button\" onClick={onClear} >\r\n        Clear\r\n      </button>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// @flow\r\n\r\nimport React, { useContext, useState } from 'react';\r\nimport { Context, type ContextType } from 'Provider';\r\nimport { CLICK_COLOR, INITIAL_COLOR, KEYS } from 'constants.js';\r\nimport './Board.scss';\r\n\r\nconst Board = ({ name, ref }) => {\r\n  const context = useContext(Context);\r\n  const { board, setBoard } = context;\r\n  const [clicking, setClicking] = useState(false);\r\n\r\n  const onMouseDown = () => {\r\n    setClicking(true);\r\n  }\r\n\r\n  const onMouseUp = () => {\r\n    setClicking(false);\r\n  }\r\n\r\n  const changeColor = (e) => {\r\n    if (e.target.className !== 'board__col') return;\r\n    if (e.target.style.backgroundColor !== INITIAL_COLOR) return;\r\n    const data = e.target.dataset;\r\n    const ridx = data.ridx * 1, cidx = data.cidx * 1;\r\n    const copy = JSON.parse(JSON.stringify(board));\r\n    copy[ridx][cidx].color = CLICK_COLOR;\r\n    setBoard(copy);\r\n  }\r\n\r\n  const onClick = (e) => {\r\n    changeColor(e);\r\n  };\r\n\r\n  const onMouseMove = (e) => {\r\n    if (!clicking) return;\r\n    changeColor(e);\r\n  };\r\n\r\n  return (\r\n    <div className=\"board\" onMouseDown={onMouseDown} onMouseUp={onMouseUp} onClick={onClick} onMouseMove={onMouseMove}>\r\n      {board.map((row, ridx) => (\r\n        <div className=\"board_row\" key={ridx} style={{ display: 'flex', justifyContent: 'center' }}>\r\n          {row.map((col, cidx) => {\r\n            let onMouseMove = null;\r\n            if (board[ridx][cidx].color === INITIAL_COLOR && clicking) {\r\n              onMouseMove = () => {\r\n                const copy = JSON.parse(JSON.stringify(board));\r\n                copy[ridx][cidx].color = CLICK_COLOR;\r\n                setBoard(copy);\r\n              };\r\n            }\r\n\r\n            return (\r\n              <div className=\"board_col\"\r\n                key={2 * ridx + cidx}\r\n                onMouseMove={onMouseMove}\r\n                style={{\r\n                  backgroundColor: (board[ridx][cidx].color || null),\r\n                  transition: (clicking ? 'none' : 'background-color 0.3s linear')\r\n                }} />\r\n            )\r\n              })}\r\n          <br />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","// @flow\r\n\r\nimport React from 'react';\r\nimport Modal from 'react-modal';\r\nimport './Info.scss';\r\n\r\ntype ModalInfoPropTypes = {\r\n  isHelped: boolean,\r\n  onHelpClose: (any) => void\r\n};\r\n\r\nconst ModalInfo = ({ isHelped, onHelpClose } : ModalInfoPropTypes) => {\r\n  return (\r\n    <Modal\r\n      className=\"modal-info\"\r\n      isOpen={isHelped}\r\n      contentLabel=\"Example Modal\"\r\n      onRequestClose={onHelpClose}\r\n    >\r\n      <h1 className=\"modal-info__title\">How to use?</h1>\r\n      <p className=\"modal-info__color\">\r\n        <div className=\"modal-info__row\">\r\n          <p className=\"modal-info__content\">\r\n            <span className=\"modal-info__square--initial\" />\r\n            <p>intiial</p>\r\n          </p>\r\n          <p className=\"modal-info__content\">\r\n            <span className=\"modal-info__square--visited\" />\r\n            <p>visited</p>\r\n          </p>\r\n        </div>\r\n        <div className=\"modal-info__row\">\r\n          <p className=\"modal-info__content\">\r\n            <span className=\"modal-info__square--clicked\" />\r\n            <p>clicked</p>\r\n          </p>\r\n          <p className=\"modal-info__content\">\r\n            <span className=\"modal-info__square--fixed\" />\r\n            <p>fixed</p>\r\n          </p>\r\n        </div>\r\n        <div className=\"modal-info__row\">\r\n          <p className=\"modal-info__content\">\r\n            <span className=\"modal-info__square--shortest\" />\r\n            <p>shortest</p>\r\n          </p>\r\n        </div>\r\n      </p>\r\n      <p className=\"modal-info__usage\">\r\n        <div className=\"modal-info__row\">\r\n          <h2>1. You can make wall by clicking any block</h2>\r\n        </div>\r\n        <div className=\"modal-info__row\">\r\n          <h2>2. You can move</h2>\r\n          <span className=\"modal-info__square--fixed\" />\r\n          <h2>by dragging</h2>\r\n        </div>\r\n        <div className=\"modal-info__row\">\r\n          <h2>3. You can choose algorithm and speed from select box</h2>\r\n        </div>\r\n      </p>\r\n      <button onClick={onHelpClose} className=\"modal-info__close\">X</button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalInfo; \r\n","// @flow\n\nimport React, { useEffect, useContext, useState } from 'react';\nimport Modal from 'react-modal';\nimport Header from '../Header/Header';\nimport Board from '../Board/Board';\nimport ModalInfo from '../Info/Info';\nimport { Context } from 'Provider';\nimport './Container.scss';\n\nModal.setAppElement('#root');\n\nconst Container = () => {\n\n  type ContextType = {\n    isPathExist: boolean,\n    pathFinder: typeof React.useRef,\n    clear: (void) => void\n  };\n\n  const context = useContext(Context);\n  const { isPathExist, pathFinder, clear, isHelped, setIsHelped } : ContextType = context;\n  const [isOpen, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    if (!isPathExist) {\n      clear();\n      pathFinder.current.clearTimers();\n      setIsOpen(true);\n    }\n  }, [isPathExist, pathFinder, clear]);\n\n  const onClose = () => { setIsOpen(false); };\n  const onHelpClose = () => {\n    setIsHelped(false);\n  };\n  \n  return (\n    <>\n      <header className=\"header\">\n        <h1 className=\"header__title\">Pathfinding Visualizer</h1>\n      </header>\n      <ModalInfo isHelped={isHelped} onHelpClose={onHelpClose} />\n      <Modal\n        className=\"modal\"\n        isOpen={isOpen}\n        contentLabel=\"Example Modal\"\n        onRequestClose={onClose}\n      >\n        <h1 className=\"modal__title\">Error!</h1>\n        <p className=\"modal__content\">Cannot find path to the goal</p>\n        <button onClick={onClose} className=\"modal__close\">X</button>\n      </Modal>\n      <Header />\n      <Board />\n      <footer className=\"footer\">\n        <p className=\"footer__author\"></p>\n      </footer>\n    </>\n  );\n};\nexport default Container;","import React from 'react';\nimport Container from './components/Container/Container';\nimport { Provider } from 'Provider';\n\nconst App = () => {\n  return (\n    <Provider>\n      <Container />\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}