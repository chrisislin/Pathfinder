{"version":3,"sources":["Provider.jsx","constants.js","algo/pathFinder.js","algo/dijkstra.js","algo/bellmanFord.js","algo/index.js","components/Header/Header.js","components/Board/Board.js","components/Container/Container.js","App.js","index.js"],"names":["BOARD_ROW","VISIT_COLOR","FIXED_COLOR","DIJKSTRA","BELLMAN_FORD","PathFinder","begin","end","board","setState","delay","this","copy","JSON","parse","stringify","dist","Array","prev","i","j","Infinity","x","y","row","col","visit","path","push","tempX","tempY","color","temp","setTimeout","length","Dijkstra","pq","PriorityQueue","comparator","a","b","d","queue","find","current","peek","dequeue","currentX","currentY","currentD","nextX","nextY","BellmanFord","empty","timeFactor","isUpdated","k","_relax","Pathfinder","Context","createContext","_begin","_end","_board","Provider","props","useState","setBegin","setEnd","setBoard","pathFinder","useRef","dijkstra","value","clear","children","Header","type","setType","context","useContext","useEffect","paintShortestPath","className","onChange","e","target","defaultChecked","onClick","_e","execute","Board","map","ridx","style","display","justifyContent","cidx","backgroundColor","Container","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad785dec.chunk.js","sourcesContent":["import React, { createContext, useState, useRef } from 'react';\nimport { BOARD_ROW, BOARD_COL, FIXED_COLOR } from './constants';\nimport PathFinder from 'algo/index.js';\n\nconst Context = createContext();\nconst _begin = { x: 7, y: 2 };\nconst _end = { x: 1, y: 9 };\nconst _board = new Array(BOARD_ROW);\nfor(let i=0; i<BOARD_ROW; i++){\n  _board[i] = [];\n  for(let j=0; j<BOARD_COL; j++){\n    _board[i][j] = {};\n  }\n}\n_board[_begin.x][_begin.y] = { color: FIXED_COLOR, visit: true };\n_board[_end.x][_end.y].color = FIXED_COLOR;\n\nconst Provider = (props) => {\n\n  const [begin, setBegin] = useState(_begin);\n  const [end, setEnd] = useState(_end);\n  const [board, setBoard] = useState(_board);\n  const pathFinder = useRef(PathFinder.dijkstra);\n\n  const clear = () => {\n    setBoard(_board);\n  };\n\n  return (\n    <Context.Provider value={{\n      begin, setBegin,\n      end, setEnd,\n      board, setBoard,\n      pathFinder, clear\n    }}\n    >\n      {props.children}\n    </Context.Provider>\n  );\n};\n\nexport { Context, Provider };","export const BOARD_ROW = 16;\nexport const BOARD_COL = 30;\nexport const VISIT_COLOR = 'blue';\nexport const SHORT_COLOR = 'green';\nexport const FIXED_COLOR = 'black';\n\nexport const DIJKSTRA = 'dijkstra';\nexport const BELLMAN_FORD = 'bellman_ford';\n","import { BOARD_ROW, BOARD_COL, VISIT_COLOR, SHORT_COLOR } from 'constants.js';\n\nexport default class PathFinder {\n  constructor({ begin, end, board, setState, delay }) {\n    this.begin = begin;\n    this.end = end;\n    this.copy = JSON.parse(JSON.stringify(board));\n    this.dist = new Array(BOARD_ROW);\n    this.prev = new Array(BOARD_ROW);\n\n    for (let i = 0; i < BOARD_ROW; i++) {\n      this.dist[i] = [];\n      this.prev[i] = [];\n\n      for (let j = 0; j < BOARD_COL; j++) {\n        this.dist[i][j] = Infinity;\n        this.prev[i][j] = { x: -1, y: -1 };\n      }\n    }\n    this.setState = setState;\n    this.delay = delay;\n    this.row = [-1, 1, 0, 0];\n    this.col = [0, 0, -1, 1];\n  }\n\n  paintShortestPath() {\n    this.copy[this.end.x][this.end.y].visit = false;\n    const path = [];\n    let x = this.end.x;\n    let y = this.end.y;\n\n    while (this.prev[x][y].x !== -1 && this.prev[x][y].y !== -1) {\n      path.push({ x, y });\n      const tempX = x, tempY = y;\n      x = this.prev[tempX][tempY].x;\n      y = this.prev[tempX][tempY].y;\n    }\n    path.push({ x: this.begin.x, y: this.begin.y });\n\n    for (let i = path.length - 1; i >= 0; i--) {\n      x = path[i].x;\n      y = path[i].y;\n      this.copy[x][y].color = SHORT_COLOR;\n      const temp = JSON.parse(JSON.stringify(this.copy));\n      setTimeout(() => { this.setState(temp) }, this.delay * (path.length - i));\n    }\n\n  }\n}\n","import PriorityQueue from 'js-priority-queue';\nimport { BOARD_ROW, BOARD_COL, VISIT_COLOR, SHORT_COLOR } from 'constants.js';\nimport PathFinder from './pathFinder';\n\nexport default class Dijkstra extends PathFinder  {\n  constructor({ begin, end, board, setState, delay }) {\n    super({ begin, end, board, setState, delay });\n    this.pq = new PriorityQueue({ comparator: (a, b) => a.d - b.d });\n  }\n\n  execute() {\n    this.pq.queue({ x: this.begin.x, y: this.begin.y, d: 0 });\n    this.dist[this.begin.x][this.begin.y] = 0;\n    let find = false;\n\n    while (this.pq.length) {\n      const current = this.pq.peek();\n      this.pq.dequeue();\n      const currentX = current.x;\n      const currentY = current.y;\n      const currentD = current.d;\n\n      for (let i = 0; i < 4; i++) {\n        const nextX = currentX + this.row[i];\n        const nextY = currentY + this.col[i];\n\n        if (nextX < 0 || nextX >= BOARD_ROW || nextY < 0 || nextY >= BOARD_COL) continue;\n        if (this.dist[currentX][currentY] + 1 >= this.dist[nextX][nextY]) continue;\n\n        if (nextX === this.end.x && nextY === this.end.y) {\n          this.copy[nextX][nextY].visit = true;\n          this.prev[nextX][nextY].x = currentX;\n          this.prev[nextX][nextY].y = currentY;\n          find = true;\n          break;\n        }\n\n        this.copy[nextX][nextY].color = VISIT_COLOR;\n        this.copy[nextX][nextY].visit = true;\n\n        this.dist[nextX][nextY] = this.dist[currentX][currentY] + 1;\n        this.prev[nextX][nextY].x = currentX;\n        this.prev[nextX][nextY].y = currentY;\n        this.pq.queue({\n          x: nextX,\n          y: nextY,\n          d: this.dist[nextX][nextY]\n        });\n      }\n      const temp = JSON.parse(JSON.stringify(this.copy));\n      setTimeout(() => { this.setState(temp) }, this.delay * currentD);\n      if (find) break;\n    }\n  }\n}\n","import { BOARD_ROW, BOARD_COL, VISIT_COLOR } from 'constants.js';\nimport PathFinder from './pathFinder';\n\nexport default class BellmanFord extends PathFinder {\n  constructor({begin, end, board, setState, delay}){\n    super({begin, end, board, setState, delay});\n    this.empty = JSON.parse(JSON.stringify(board));\n  }\n\n  _relax(timeFactor) {\n    const copy = this.copy;\n    const dist = this.dist;\n    const prev = this.prev;\n    for(let i=0; i<BOARD_ROW; i++){\n      for(let j=0; j<BOARD_COL; j++){\n        let isUpdated = false;\n        for(let k=0; k<4; k++){\n          const nextX = i + this.row[k];\n          const nextY = j + this.col[k];\n          if (nextX < 0 || nextX >= BOARD_ROW || nextY < 0 || nextY >= BOARD_COL) continue;\n          if (dist[i][j] === Infinity || dist[i][j] + 1 >= dist[nextX][nextY]) continue;\n\n          dist[nextX][nextY] = dist[i][j] + 1;\n          if (!(nextX === this.end.x && nextY === this.end.y)) {\n            copy[nextX][nextY].color = VISIT_COLOR;\n            copy[nextX][nextY].visit = true;\n          }\n          prev[nextX][nextY] = { x: i, y: j };\n          isUpdated = true;\n        }\n        if (isUpdated) {\n          const temp = JSON.parse(JSON.stringify(copy));\n          setTimeout(() => { this.setState(temp) }, this.delay*timeFactor);\n          timeFactor++;\n        }\n      }\n    }\n    return timeFactor;\n  }\n\n  execute() {\n    this.dist[this.begin.x][this.begin.y] = 0;\n    let timeFactor = 1;\n    for(let i=1; i<=this.copy.length-1; i++) {\n      timeFactor = this._relax(timeFactor);\n      timeFactor++;\n    }\n    this.copy[this.end.x][this.end.y].visit = true;\n    setTimeout(() => { this.setState(this.copy) }, this.delay*timeFactor);\n  }\n} ","import { DIJKSTRA, BELLMAN_FORD } from 'constants.js';\nimport Dijkstra from './dijkstra';\nimport BellmanFord from './bellmanFord';\n\nconst Pathfinder = {\n  [DIJKSTRA]: Dijkstra,\n  [BELLMAN_FORD]: BellmanFord\n};\n\nexport default Pathfinder;\n","import React, { useState, useContext, useEffect } from 'react';\nimport { DIJKSTRA, BELLMAN_FORD } from 'constants.js';\nimport { Context } from 'Provider';\nimport PathFinder from 'algo/index.js';\nimport './Header.scss';\nimport { clear } from 'sisteransi';\n\nconst Header = () => {\n  const [type, setType] = useState(DIJKSTRA);\n  const context = useContext(Context);\n  const { begin, end, board, setBoard, pathFinder } = context;\n\n  const onSelectChange = (e) => {\n    setType(e.target.value);\n  };\n\n  const onVisualize = (_e) => {\n    pathFinder.current = new PathFinder[type]({\n      begin,\n      end,\n      board,\n      setState: setBoard,\n      delay: 300\n    });\n    pathFinder.current.execute();\n  };\n\n  const onClear = () => {\n    clear();\n  };\n\n  useEffect(() => {\n    if (board[end.x][end.y].visit) {\n      pathFinder.current.paintShortestPath();\n    }\n  }, [board, pathFinder, end]);\n\n  return (\n    <header className=\"header\">\n      <select className=\"header_select\" onChange={onSelectChange}>>\n        <option value={DIJKSTRA} defaultChecked={true}>Dijkstra</option>\n        <option value={BELLMAN_FORD}>Bellman-Ford</option>\n      </select>\n      <button className=\"header_visualize\" onClick={onVisualize}>\n        Click on me\n      </button>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useContext } from 'react';\nimport { Context } from 'Provider';\nimport './Board.scss';\n\nconst Board = () => {\n  const context = useContext(Context);\n  const { board } = context;\n\n  return (\n    <div className=\"board\">\n      {board.map((row, ridx) => (\n        <div className=\"board_row\" key={ridx} style={{ display: 'flex', justifyContent: 'center' }}>\n          {row.map((col, cidx) => {\n            return (\n            <div className=\"board_col\" key={2 * ridx + cidx} style={{\n              backgroundColor: (board[ridx][cidx].color || null)\n            }} />\n            )\n          })}\n          <br />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Board;\n","import React from 'react';\nimport Header from '../Header/Header';\nimport Board from '../Board/Board';\nimport { Provider } from 'Provider';\n\nconst Container = () => {\n\n  return (\n    <Provider>\n      <Header />\n      <Board />\n    </Provider>\n  );\n};\n\nexport default Container;\n","import React from 'react';\nimport Container from './components/Container/Container';\n\nconst App = () => {\n  return (\n    <Container />\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}