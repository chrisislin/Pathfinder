{"version":3,"sources":["Provider.jsx","constants.js","algo/pathFinder.js","algo/dijkstra.js","algo/bellmanFord.js","algo/index.js","components/Header/Header.js","components/Board/Board.js","components/Container/Container.js","App.js","index.js"],"names":["BOARD_ROW","VISIT_COLOR","FIXED_COLOR","INITIAL_COLOR","CLICK_COLOR","DIJKSTRA","BELLMAN_FORD","PathFinder","begin","end","board","setState","delay","this","_init","copy","JSON","parse","stringify","row","col","timers","newBoard","dist","Array","prev","i","j","Infinity","x","y","forEach","timer","clearTimeout","visit","path","push","tempX","tempY","color","temp","setTimeout","length","Dijkstra","pq","PriorityQueue","comparator","a","b","d","queue","find","current","peek","dequeue","currentX","currentY","currentD","nextX","nextY","BellmanFord","empty","timeFactor","isUpdated","k","_relax","Pathfinder","Context","createContext","_begin","_end","_board","Provider","props","useState","setBegin","setEnd","setBoard","pathFinder","useRef","dijkstra","value","clear","children","Header","type","setType","setDelay","context","useContext","useEffect","paintShortestPath","clearTimers","className","onChange","e","target","defaultChecked","defaultValue","onClick","_e","execute","Board","name","ref","clicking","setClicking","changeColorHandler","ridx","cidx","onMouseDown","onMouseUp","map","style","display","justifyContent","onMouseMove","backgroundColor","transition","Container","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0504e13.chunk.js","sourcesContent":["import React, { createContext, useState, useRef } from 'react';\nimport { BOARD_ROW, BOARD_COL, FIXED_COLOR, INITIAL_COLOR } from './constants';\nimport PathFinder from 'algo/index.js';\n\nconst Context = createContext();\nconst _begin = { x: 7, y: 2 };\nconst _end = { x: 1, y: 9 };\nconst _board = new Array(BOARD_ROW);\nfor(let i=0; i<BOARD_ROW; i++){\n  _board[i] = [];\n  for(let j=0; j<BOARD_COL; j++){\n    _board[i][j] = {\n      color: INITIAL_COLOR,\n      visit: false\n    };\n  }\n}\n_board[_begin.x][_begin.y] = { color: FIXED_COLOR, visit: true };\n_board[_end.x][_end.y] = {color: FIXED_COLOR, visit:false };\n\nconst Provider = (props) => {\n\n  const [begin, setBegin] = useState(_begin);\n  const [end, setEnd] = useState(_end);\n  const [board, setBoard] = useState(_board);\n  const pathFinder = useRef(PathFinder.dijkstra);\n\n  const clear = () => {\n    setBoard(_board);\n    pathFinder.current.clear(_board);\n  };\n\n  return (\n    <Context.Provider value={{\n      begin, setBegin,\n      end, setEnd,\n      board, setBoard,\n      pathFinder, clear,\n    }}\n    >\n      {props.children}\n    </Context.Provider>\n  );\n};\n\nexport { Context, Provider };","export const BOARD_ROW = 16;\nexport const BOARD_COL = 30;\nexport const VISIT_COLOR = 'deepskyblue';\nexport const SHORT_COLOR = 'red';\nexport const FIXED_COLOR = 'black';\nexport const INITIAL_COLOR = 'silver';\nexport const CLICK_COLOR = 'gray';\n\n\nexport const DIJKSTRA = 'dijkstra';\nexport const BELLMAN_FORD = 'bellman_ford';\n","import { BOARD_ROW, BOARD_COL, VISIT_COLOR, SHORT_COLOR } from 'constants.js';\n\nexport default class PathFinder {\n  constructor({ begin, end, board, setState, delay }) {\n    this._init();\n    this.begin = begin;\n    this.end = end;\n    this.copy = JSON.parse(JSON.stringify(board));\n    this.setState = setState;\n    this.delay = delay;\n    this.row = [-1, 1, 0, 0];\n    this.col = [0, 0, -1, 1];\n    this.timers = []\n  }\n\n  clear(newBoard) {\n    this.copy = JSON.parse(JSON.stringify(newBoard));\n    this._init();\n  }\n  _init() {\n    this.dist = new Array(BOARD_ROW);\n    this.prev = new Array(BOARD_ROW);\n\n    for (let i = 0; i < BOARD_ROW; i++) {\n      this.dist[i] = [];\n      this.prev[i] = [];\n\n      for (let j = 0; j < BOARD_COL; j++) {\n        this.dist[i][j] = Infinity;\n        this.prev[i][j] = { x: -1, y: -1 };\n      }\n    }\n  }\n\n  clearTimers() {\n    this.timers.forEach((timer) => { clearTimeout(timer); })\n    this.timers = [];\n  }\n\n  paintShortestPath() {\n    this.copy[this.end.x][this.end.y].visit = false;\n    const path = [];\n    let x = this.end.x;\n    let y = this.end.y;\n\n    while (this.prev[x][y].x !== -1 && this.prev[x][y].y !== -1) {\n      path.push({ x, y });\n      const tempX = x, tempY = y;\n      x = this.prev[tempX][tempY].x;\n      y = this.prev[tempX][tempY].y;\n    }\n    path.push({ x: this.begin.x, y: this.begin.y });\n\n    for (let i = path.length - 2; i >= 1; i--) {\n      x = path[i].x;\n      y = path[i].y;\n      this.copy[x][y].color = SHORT_COLOR;\n      const temp = JSON.parse(JSON.stringify(this.copy));\n      const timer = setTimeout(() => { this.setState(temp) }, this.delay * (path.length - i));\n      this.timers.push(timer);\n    }\n\n  }\n}\n","import PriorityQueue from 'js-priority-queue';\nimport { BOARD_ROW, BOARD_COL, VISIT_COLOR, CLICK_COLOR } from 'constants.js';\nimport PathFinder from './pathFinder';\n\nexport default class Dijkstra extends PathFinder  {\n  constructor({ begin, end, board, setState, delay }) {\n    super({ begin, end, board, setState, delay });\n    this.pq = new PriorityQueue({ comparator: (a, b) => a.d - b.d });\n  }\n\n  execute() {\n    this.pq.queue({ x: this.begin.x, y: this.begin.y, d: 0 });\n    this.dist[this.begin.x][this.begin.y] = 0;\n    let find = false;\n\n    while (this.pq.length) {\n      const current = this.pq.peek();\n      this.pq.dequeue();\n      const currentX = current.x;\n      const currentY = current.y;\n      const currentD = current.d;\n\n      for (let i = 0; i < 4; i++) {\n        const nextX = currentX + this.row[i];\n        const nextY = currentY + this.col[i];\n\n        if (nextX < 0 || nextX >= BOARD_ROW || nextY < 0 || nextY >= BOARD_COL) continue;\n        if (this.dist[currentX][currentY] + 1 >= this.dist[nextX][nextY]) continue;\n        if (this.copy[nextX][nextY].color === CLICK_COLOR) continue;\n\n        if (nextX === this.end.x && nextY === this.end.y) {\n          this.copy[nextX][nextY].visit = true;\n          this.prev[nextX][nextY].x = currentX;\n          this.prev[nextX][nextY].y = currentY;\n          find = true;\n          break;\n        }\n\n        this.copy[nextX][nextY].color = VISIT_COLOR;\n        this.copy[nextX][nextY].visit = true;\n\n        this.dist[nextX][nextY] = this.dist[currentX][currentY] + 1;\n        this.prev[nextX][nextY].x = currentX;\n        this.prev[nextX][nextY].y = currentY;\n        this.pq.queue({\n          x: nextX,\n          y: nextY,\n          d: this.dist[nextX][nextY]\n        });\n      }\n      const temp = JSON.parse(JSON.stringify(this.copy));\n      setTimeout(() => { this.setState(temp) }, this.delay * currentD);\n      if (find) break;\n    }\n  }\n}\n","import { BOARD_ROW, BOARD_COL, VISIT_COLOR, CLICK_COLOR } from 'constants.js';\nimport PathFinder from './pathFinder';\n\nexport default class BellmanFord extends PathFinder {\n  constructor({begin, end, board, setState, delay}){\n    super({begin, end, board, setState, delay});\n    this.empty = JSON.parse(JSON.stringify(board));\n  }\n\n  _relax(timeFactor) {\n    const copy = this.copy;\n    const dist = this.dist;\n    const prev = this.prev;\n    for(let i=0; i<BOARD_ROW; i++){\n      for(let j=0; j<BOARD_COL; j++){\n        let isUpdated = false;\n        for(let k=0; k<4; k++){\n          const nextX = i + this.row[k];\n          const nextY = j + this.col[k];\n          if (nextX < 0 || nextX >= BOARD_ROW || nextY < 0 || nextY >= BOARD_COL) continue;\n          if (dist[i][j] === Infinity || dist[i][j] + 1 >= dist[nextX][nextY]) continue;\n          if (copy[nextX][nextY].color === CLICK_COLOR) continue;\n        \n          dist[nextX][nextY] = dist[i][j] + 1;\n          if (!(nextX === this.end.x && nextY === this.end.y)) {\n            copy[nextX][nextY].color = VISIT_COLOR;\n            copy[nextX][nextY].visit = true;\n          }\n          prev[nextX][nextY] = { x: i, y: j };\n          isUpdated = true;\n        }\n        if (isUpdated) {\n          const temp = JSON.parse(JSON.stringify(copy));\n          setTimeout(() => { this.setState(temp) }, this.delay*timeFactor);\n          timeFactor++;\n        }\n      }\n    }\n    return timeFactor;\n  }\n\n  execute() {\n    this.dist[this.begin.x][this.begin.y] = 0;\n    let timeFactor = 1;\n    for(let i=1; i<=this.copy.length-1; i++) {\n      timeFactor = this._relax(timeFactor);\n      timeFactor++;\n    }\n    this.copy[this.end.x][this.end.y].visit = true;\n    const temp = JSON.parse(JSON.stringify(this.copy));\n    const timer = setTimeout(() => { this.setState(this.copy) }, this.delay*timeFactor);\n    this.timers.push(timer);\n  }\n} ","import { DIJKSTRA, BELLMAN_FORD } from 'constants.js';\nimport Dijkstra from './dijkstra';\nimport BellmanFord from './bellmanFord';\n\nconst Pathfinder = {\n  [DIJKSTRA]: Dijkstra,\n  [BELLMAN_FORD]: BellmanFord\n};\n\nexport default Pathfinder;\n","import React, { useState, useContext, useEffect } from 'react';\nimport { DIJKSTRA, BELLMAN_FORD, SHORT_COLOR } from 'constants.js';\nimport { Context } from 'Provider';\nimport PathFinder from 'algo/index.js';\nimport './Header.scss';\nimport { clear } from 'sisteransi';\n\nconst Header = () => {\n  const [type, setType] = useState(DIJKSTRA);\n  const [delay, setDelay] = useState(300);\n  const context = useContext(Context);\n  const { begin, end, board, setBoard, pathFinder, clear } = context;\n\n  const onSelectChange = (e) => {\n    setType(e.target.value);\n  };\n\n  const onDelayChange = (e) => {\n    setDelay(e.target.value);\n  };\n\n\n  const onVisualize = (_e) => {\n    pathFinder.current = new PathFinder[type]({\n      begin,\n      end,\n      board,\n      setState: setBoard,\n      delay\n    });\n    pathFinder.current.execute();\n  };\n\n  const onClear = () => {\n    clear();\n  };\n\n  useEffect(() => {\n    if (board[end.x][end.y].visit) {\n      pathFinder.current.paintShortestPath();\n    }\n  }, [board, pathFinder, end]);\n\n  useEffect(() => {\n    if (board[end.x][end.y].color === SHORT_COLOR) {\n      pathFinder.current.clearTimers();\n    }\n  }, [board, pathFinder, end]);\n\n  return (\n    <header className=\"header\">\n      <select className=\"header_select\" onChange={onSelectChange}>>\n        <option value={DIJKSTRA} defaultChecked={true}>Dijkstra</option>\n        <option value={BELLMAN_FORD}>Bellman-Ford</option>\n      </select>\n      <select className=\"header_select\" onChange={onDelayChange} defaultValue={300}>\n        <option value={550}>slowest</option>\n        <option value={450}>slow</option>\n        <option value={300}>default</option>\n        <option value={150}>fast</option>\n        <option value={50}>fastest</option>\n      </select>\n      <button className=\"header_button\" onClick={onVisualize}>\n        Visualize this\n      </button>\n      <button className=\"header_button\" onClick={onClear}>\n        Clear\n      </button>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useContext, useState } from 'react';\nimport { Context } from 'Provider';\nimport { CLICK_COLOR, INITIAL_COLOR } from 'constants.js';\nimport './Board.scss';\n\nconst Board = ({ name, ref }) => {\n  const context = useContext(Context);\n  const { board, setBoard } = context;\n  const [clicking, setClicking] = useState(false);\n\n  const onMouseDown = () => {\n    setClicking(true);\n  }\n\n  const onMouseUp = () => {\n    setClicking(false);\n  }\n\n  const changeColorHandler = (ridx, cidx) => {\n    return () => {\n      const copy = JSON.parse(JSON.stringify(board));\n      copy[ridx][cidx].color = CLICK_COLOR;\n      setBoard(copy);\n    };\n  }\n\n  return (\n    <div className=\"board\" onMouseDown={onMouseDown} onMouseUp={onMouseUp}>\n      {board.map((row, ridx) => (\n        <div className=\"board_row\" key={ridx} style={{ display: 'flex', justifyContent: 'center' }}>\n          {row.map((col, cidx) => {\n            let onMouseMove = null;\n            if (board[ridx][cidx].color === INITIAL_COLOR && clicking) {\n              onMouseMove = changeColorHandler(ridx, cidx);\n            }\n\n            return (\n              <div className=\"board_col\"\n                key={2 * ridx + cidx}\n                onMouseMove={onMouseMove}\n                onClick={changeColorHandler(ridx, cidx)}\n                style={{\n                  backgroundColor: (board[ridx][cidx].color || null),\n                  transition: (clicking ? 'none' : 'background-color 0.3s linear')\n                }} />\n            )\n          })}\n          <br />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Board;\n","import React from 'react';\nimport Header from '../Header/Header';\nimport Board from '../Board/Board';\nimport { Provider } from 'Provider';\nimport './Container.scss';\n\nconst Container = () => {\n\n  return (\n    <>\n      <header className=\"header\">\n        <h1 className=\"header_title\">Pathfinder</h1>\n      </header>\n      <Provider>\n        <Header />\n        <Board />\n      </Provider>\n    </>\n  );\n};\n\nexport default Container;\n","import React from 'react';\nimport Container from './components/Container/Container';\n\nconst App = () => {\n  return (\n    <Container />\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}